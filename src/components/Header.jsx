import React from 'react'
import PropTypes from 'prop-types'
import styled from '@emotion/styled'
import { css, keyframes } from '@emotion/core'
import { withTheme } from 'emotion-theming';
import { graphql, useStaticQuery } from 'gatsby'
import Img from 'gatsby-image'
import { Wrapper } from '../components'
import LocalizedLink from './LocalizedLink';
import typography, {rhythm} from '../../config/typography'
import {fadeIn} from '../styles/animations'


const Hero = styled.header`
  /* background-color: ${props => props.theme.colors.greyLight}; */
  position: relative;
  height: calc(10vw + 300px);
`

const HeroImage = css`
  object-fit: cover;
  height: 100%;
  opacity: 0;
  animation: ${fadeIn} 3s ease-out 1s forwards;
`


const HeroInner = styled(Wrapper)`
  max-width: none;
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100%;
  z-index: 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  background: linear-gradient(
    to bottom,
    ${props => props.theme.colors.bg}00 0%,
    ${props => props.theme.colors.bg} 100%
  );
`

const dash = keyframes`
  to {
    stroke-dashoffset: 0;
  }
`

const Logo = styled.svg`

    width: 300px;
    height: 100px;

    path {
      opacity: 0;
      animation: ${fadeIn} 2s ease-out .8s forwards;
    }

    .heart {
      opacity: 1;
      stroke-dasharray: 200;
      stroke-dashoffset: 200;
      animation: ${dash} 1s ease-in forwards;
    }
`

const HeroText = styled.h1`
  font-size: ${rhythm(.8)};
  margin-top: ${rhythm(.5)};
  line-height: ${rhythm(1)};
  text-align: center;
  color: ${props => props.theme.colors.greyLight};
  font-family: ${typography.options.bodyFontFamily.join(", ")};

  opacity: 0;
  animation: ${fadeIn} 2.2s ease-out 1s forwards;

  p {
    display: inline-block;
    margin: 0 .1em;
  }
`

const Header = (props) => {
    const data = useStaticQuery(query)
    const header = data.allPrismicSiteSettings.edges.filter(e => e.node.lang === props.pageContext.locale)[0].node.data


    return (
    <Hero>
        <Img fluid={header.header_image.localFile.childImageSharp.fluid} alt={header.header_image.alt} css={HeroImage} />
        <HeroInner>
            <LocalizedLink to="/" css={Logo}>
              <Logo viewBox="0 0 193 66" fill="none" xmlns="http://www.w3.org/2000/svg">
                <title>{header.name.text}</title>
                <path class="heart" d="M32.0205 17.2136L32.9569 18.8747L33.8933 17.2136C35.645 14.1066 37.4968 11.7163 39.8071 10.0949C42.0962 8.48831 44.9176 7.57964 48.7156 7.57964C57.6162 7.57964 64.8573 14.8146 64.8573 23.703C64.8573 32.5025 59.9817 39.7499 53.492 46.3197C50.2531 49.5986 46.6524 52.6693 43.1153 55.6595C42.9264 55.8191 42.7377 55.9786 42.5493 56.1378C39.2231 58.9484 35.9665 61.7002 33.2147 64.4521C33.0724 64.5944 32.8413 64.5944 32.699 64.452C29.9503 61.7034 26.699 58.9546 23.3783 56.1472C23.1862 55.9848 22.9939 55.8222 22.8014 55.6594C19.2662 52.6691 15.6677 49.5982 12.4312 46.3192C5.94622 39.7492 1.075 32.5017 1.075 23.703C1.075 14.8135 8.30876 7.57964 17.1982 7.57964C20.9964 7.57964 23.8177 8.48832 26.1069 10.0949C28.4171 11.7162 30.2689 14.1066 32.0205 17.2136Z" stroke="white" stroke-opacity="0.25" stroke-width="2.15"/>

                <path d="M27.2321 12.5579C30.0087 5.22951 30.3162 3.49542 32.1906 1.44438C33.3069 0.222855 36.565 1.53013 36.565 1.53013C53.7324 45.6771 59.2097 54.4472 57.2924 57.3231C55.8325 59.5129 41.2305 58.5124 41.2305 58.5124L40.9476 57.3837C40.9476 57.3837 46.059 54.9981 44.9692 52.2107C30.2827 14.65 30.769 14.8096 27.2321 12.5579Z" fill="white"/>
                <path d="M13.1225 46.1431C11.7537 49.989 9.05942 55.226 10.3836 57.1586C11.7078 59.0912 23.7073 58.2754 23.7073 58.2754L23.6055 56.4512C21.8763 55.087 20.1646 53.5089 17.8832 51.2275C15.8884 49.2327 14.2329 47.9031 13.1225 46.1431Z" fill="white"/>
                <path d="M110.479 50.6836C108.238 53.7023 107.465 54.3459 104.829 56.1198C102.194 57.8936 99.1659 58.7805 95.745 58.7805C92.7295 58.7805 90.0814 58.2483 87.8008 57.184C85.5455 56.1198 83.683 54.6754 82.2133 52.8509C80.7436 51.0264 79.6413 48.8978 78.9064 46.4651C78.1969 44.0325 77.8421 41.4604 77.8421 38.749C77.8421 36.3164 78.2222 33.9344 78.9824 31.6031C79.768 29.2465 80.9083 27.1306 82.4033 25.2554C83.8477 23.4562 85.6342 22.0118 87.7628 20.9222C89.9167 19.8072 92.324 19.2498 94.9848 19.2498C97.7215 19.2498 100.065 19.6805 102.017 20.5421C103.968 21.4037 105.552 22.582 106.768 24.0771C107.934 25.4961 108.795 27.1686 109.353 29.0944C109.935 31.0203 109.968 34.4756 109.968 36.7309V39.2396L85.1472 39.8561C85.1472 42.3141 85.2286 42.7085 85.6847 44.7104C86.1662 46.7123 87.3193 48.3276 88.333 49.848C89.3212 51.3178 90.6136 52.4834 92.21 53.345C93.8064 54.1812 95.7069 54.5993 97.9115 54.5993C100.167 54.5993 101.951 54.3839 103.573 53.345C105.22 52.2807 104.768 52.4766 106.382 50.9908L110.479 50.6836ZM102.359 37.2588C102.359 35.8397 102.612 31.7425 102.359 30.1207C102.131 28.4989 101.751 27.1432 101.218 26.0536C100.636 24.8879 99.8374 23.9377 98.8238 23.2028C97.8102 22.468 96.5052 22.1005 94.9087 22.1005C92.248 22.1005 90.0307 23.2155 88.2569 25.4454C86.5085 27.65 85.2993 34.442 85.1472 38.3951L102.359 37.2588Z" fill="white"/>
                <path d="M77.3474 57.9824L60.0897 57.9905L60.3402 55.2836C60.3402 55.2836 61.5806 55.306 62.5614 55.0176C63.2709 54.7895 63.803 54.3967 64.1578 53.8393C64.5126 53.2564 64.6899 52.5089 64.6899 51.5966C64.9052 35.2742 65.1306 35.764 65.0528 26.1807C65.0528 21.4944 62.7032 14.3852 57.0882 11.4295L57.1259 8.43307L71.2278 7.55883L71.7599 8.12899L71.7599 50.7647C71.7599 52.358 72.399 53.7759 73.4807 54.9416C74.3274 55.8538 76.0021 56.2193 77.3474 56.319V57.9824Z" fill="white"/>
                <path d="M192.784 58.1572H175.083V55.6485C175.666 55.5978 175.832 55.5472 176.44 55.4965C177.073 55.4458 177.618 55.3444 178.074 55.1924C178.784 54.9643 179.303 54.5716 179.633 54.0141C179.987 53.4313 180.165 52.6837 180.165 51.7715V27.4069C180.165 26.596 179.975 25.8611 179.595 25.2023C179.24 24.5181 178.733 23.9479 178.074 23.4918C177.593 23.1877 176.896 22.9343 175.984 22.7316C175.071 22.5035 174.235 22.3642 173.475 22.3135V19.8428L186.703 19.0066L187.235 19.5387V51.3153C187.235 52.2023 187.399 52.9371 187.729 53.5199C188.084 54.1028 188.628 54.5336 189.363 54.8123C189.921 55.0404 190.466 55.2304 190.998 55.3825C191.53 55.5092 192.125 55.5978 192.784 55.6485V58.1572Z" fill="white"/>
                <path d="M186.55 11.4959C187.513 10.4063 187.995 9.1393 187.995 7.6949C187.995 6.40255 187.526 5.27491 186.588 4.31199C185.676 3.32372 184.498 2.82958 183.053 2.82958C181.761 2.82958 180.633 3.34906 179.67 4.38801C178.733 5.42696 178.264 6.64329 178.264 8.037C178.264 9.35469 178.733 10.533 179.67 11.572C180.633 12.5856 181.761 13.0924 183.053 13.0924C184.447 13.0924 185.613 12.5602 186.55 11.4959Z" fill="white"/>
                <path d="M138.803 39.4332C139.842 40.3455 140.64 41.3971 141.197 42.5881C141.755 43.7791 142.034 45.2361 142.034 46.9593C142.034 50.4309 140.729 53.269 138.119 55.4736C135.534 57.6782 132.176 58.7805 128.046 58.7805C125.867 58.7805 123.891 58.3877 122.042 57.6022C120.766 57.2146 119.317 57.3429 119.317 57.3429L116.068 57.6022L115.619 50.0767L118.701 49.8674C118.701 49.8674 119.672 51.4511 121.061 52.721C122.45 53.9909 122.572 53.9532 123.941 54.7134C125.334 55.4736 126.893 55.8537 128.616 55.8537C131.049 55.8537 132.924 55.3089 134.242 54.2192C135.559 53.1043 136.218 51.5205 136.218 49.4679C136.218 48.4037 136.003 47.4914 135.572 46.7312C135.166 45.9457 134.558 45.2615 133.747 44.6786C132.911 44.0958 131.885 43.5763 130.669 43.1202C129.452 42.6388 128.097 42.17 126.601 41.7138C125.41 41.3591 124.08 40.8776 122.61 40.2695C121.166 39.6359 119.924 38.9011 118.885 38.0649C117.77 37.1779 116.858 36.0883 116.149 34.796C115.439 33.5036 115.084 31.9832 115.084 30.2347C115.084 27.1686 116.225 24.5712 118.505 22.4426C120.786 20.314 123.839 19.2498 127.666 19.2498C129.135 19.2498 130.631 19.4398 132.151 19.8199C133.697 20.2 134.013 20.1554 134.013 20.1554L138.979 19.9135L139.496 29.4062L136.868 29.5758C136.336 26.8897 135.787 26.3957 134.013 24.7232C132.265 23.0254 130.124 22.1765 127.59 22.1765C125.512 22.1765 123.877 22.696 122.686 23.735C121.495 24.7739 120.9 26.0283 120.9 27.498C120.9 28.6383 121.09 29.5886 121.47 30.3488C121.875 31.109 122.471 31.7551 123.257 32.2873C124.017 32.7941 124.967 33.2756 126.107 33.7317C127.273 34.1625 128.705 34.6566 130.402 35.2141C132.075 35.7462 133.646 36.3671 135.116 37.0766C136.611 37.7861 137.84 38.5717 138.803 39.4332Z" fill="white"/>
                <path d="M169.213 39.4335C170.252 40.3457 171.05 41.3973 171.608 42.5883C172.165 43.7793 172.444 45.2364 172.444 46.9595C172.444 50.4311 171.139 53.2692 168.529 55.4738C165.944 57.6784 162.586 58.7807 158.456 58.7807C156.277 58.7807 154.302 58.3879 152.452 57.6024C151.176 57.2149 149.727 57.3431 149.727 57.3431L146.478 57.6024L146.029 50.077L149.111 49.8677C149.111 49.8677 150.082 51.4513 151.471 52.7212C152.861 53.9911 152.983 53.9534 154.351 54.7136C155.745 55.4738 157.303 55.8539 159.026 55.8539C161.459 55.8539 163.334 55.3091 164.652 54.2195C165.969 53.1045 166.628 51.5207 166.628 49.4682C166.628 48.4039 166.413 47.4917 165.982 46.7314C165.577 45.9459 164.968 45.2617 164.158 44.6789C163.321 44.0961 162.295 43.5766 161.079 43.1205C159.862 42.639 158.507 42.1702 157.012 41.7141C155.821 41.3593 154.49 40.8779 153.021 40.2697C151.576 39.6362 150.334 38.9013 149.295 38.0651C148.181 37.1782 147.268 36.0886 146.559 34.7962C145.849 33.5039 145.494 31.9834 145.494 30.235C145.494 27.1688 146.635 24.5714 148.915 22.4429C151.196 20.3143 154.25 19.25 158.076 19.25C159.546 19.25 161.041 19.44 162.561 19.8201C164.107 20.2003 164.424 20.1556 164.424 20.1556L169.389 19.9138L169.906 29.4065L167.278 29.576C166.746 26.89 166.197 26.3959 164.424 24.7235C162.675 23.0257 160.534 22.1768 158 22.1768C155.922 22.1768 154.288 22.6963 153.097 23.7352C151.906 24.7742 151.31 26.0285 151.31 27.4982C151.31 28.6385 151.5 29.5888 151.88 30.349C152.286 31.1092 152.881 31.7554 153.667 32.2875C154.427 32.7943 155.377 33.2758 156.517 33.7319C157.683 34.1627 159.115 34.6568 160.813 35.2143C162.485 35.7465 164.056 36.3673 165.526 37.0768C167.021 37.7864 168.25 38.5719 169.213 39.4335Z" fill="white"/>
              </Logo>


            </LocalizedLink>
            <HeroText dangerouslySetInnerHTML={{ __html: header.header_description.html }} />
        </HeroInner>
    </Hero>
)}

export default Header


Header.propTypes = {
    pageContext: PropTypes.shape({
      locale: PropTypes.string.isRequired,
    }).isRequired,
  }

const query = graphql`
    query HeaderQuery {
    allPrismicSiteSettings {
      edges {
          node {
            lang
            data {
                name {
                  text
                }
                header_description {
                  html
                }
                header_image {
                  localFile {
                    childImageSharp {
                      fluid(maxWidth: 1440, quality: 90) {
                        ...GatsbyImageSharpFluid_withWebp
                      }
                    }
                  }
                }
              }
            }
          }
      }
  }
`